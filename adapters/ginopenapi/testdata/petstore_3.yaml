openapi: 3.0.3
info:
  description: This is a test API for Pet Store API
  title: Test API Pet Store API
  version: 1.0.0
paths:
  /pets:
    get:
      description: Returns a list of all pets in the store
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Pet'
                type: array
          description: OK
      summary: Get all pets
      tags:
      - Pets
    post:
      description: Creates a new pet in the store
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePetRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
          description: Created
      summary: Create a new pet
      tags:
      - Pets
    put:
      description: Updates an existing pet in the store
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePetRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
          description: OK
      summary: Update an existing pet
      tags:
      - Pets
  /pets/{petId}:
    delete:
      description: Deletes a pet from the store
      parameters:
      - in: path
        name: petId
        required: true
        schema:
          type: integer
      responses:
        "204":
          description: No Content
      summary: Delete a pet
      tags:
      - Pets
    get:
      description: Returns a single pet by its ID
      parameters:
      - in: path
        name: petId
        required: true
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
          description: OK
      summary: Get pet by ID
      tags:
      - Pets
    post:
      description: Updates a pet using form data
      parameters:
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
      - in: path
        name: petId
        required: true
        schema:
          type: integer
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FormDataUpdatePetFormData'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
          description: OK
      summary: Update pet by form data
      tags:
      - Pets
  /pets/findByStatus:
    get:
      description: Returns a list of pets based on their status
      parameters:
      - in: query
        name: status
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Pet'
                type: array
          description: OK
      summary: Find pets by status
      tags:
      - Pets
  /pets/findByTags:
    get:
      description: Returns a list of pets based on their tags
      parameters:
      - in: query
        name: tags
        schema:
          items:
            type: string
          type: array
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Pet'
                type: array
          description: OK
      summary: Find pets by tags
      tags:
      - Pets
components:
  schemas:
    Category:
      properties:
        id:
          example: 1
          type: integer
        name:
          example: Dogs
          type: string
      type: object
    CreatePetRequest:
      properties:
        category:
          $ref: '#/components/schemas/Category'
        name:
          type: string
        photoUrls:
          items:
            type: string
          nullable: true
          type: array
        status:
          type: string
        tags:
          items:
            $ref: '#/components/schemas/Tag'
          nullable: true
          type: array
      type: object
    FormDataUpdatePetFormData:
      properties:
        name:
          type: string
        status:
          type: string
      type: object
    Pet:
      properties:
        category:
          $ref: '#/components/schemas/Category'
        id:
          example: 1
          type: integer
        name:
          example: doggie
          type: string
        photoUrls:
          items:
            type: string
          nullable: true
          type: array
        status:
          example: available
          type: string
        tags:
          items:
            $ref: '#/components/schemas/Tag'
          nullable: true
          type: array
      type: object
    Tag:
      properties:
        id:
          example: 1
          type: integer
        name:
          example: friendly
          type: string
      type: object
    UpdatePetRequest:
      properties:
        category:
          $ref: '#/components/schemas/Category'
        id:
          type: integer
        name:
          type: string
        photoUrls:
          items:
            type: string
          nullable: true
          type: array
        status:
          type: string
        tags:
          items:
            $ref: '#/components/schemas/Tag'
          nullable: true
          type: array
      type: object
